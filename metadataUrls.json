{"apiVersion":"v1","swaggerVersion":"1.2","basePath":"https://ip-10-101-29-72:9999/pf-admin-api/v1","resourcePath":"/metadataUrls","produces":["application/json"],"apis":[{"path":"/metadataUrls","operations":[{"method":"GET","summary":"Get a list of Metadata URLs","notes":"","type":"MetadataUrls","nickname":"getMetadataUrls","parameters":[],"responseMessages":[{"code":200,"message":"Success."}]},{"method":"POST","summary":"Add a new Metadata URL.","notes":"Add a new Metadata URL. If the Metadata URL is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.","type":"MetadataUrl","nickname":"addMetadataUrl","consumes":["application/json"],"parameters":[{"name":"body","description":"Configuration for a new Metadata URL.","required":true,"allowMultiple":false,"type":"MetadataUrl","paramType":"body"}],"responseMessages":[{"code":201,"message":"Metadata URL added."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/metadataUrls/{id}","operations":[{"method":"GET","summary":"Get a Metadata URL by ID.","notes":"Get a Metadata URL with the specified ID. A 404 status code is returned for nonexistent IDs","type":"MetadataUrl","nickname":"getMetadataUrl","parameters":[{"name":"id","description":"ID of Metadata URL to fetch","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":404,"message":"Resource not found.","responseModel":"ApiResult"}]},{"method":"PUT","summary":"Update a Metadata URL by ID.","notes":"Update a Metadata URL by ID. If the Metadata URL is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.","type":"MetadataUrl","nickname":"updateMetadataUrl","consumes":["application/json"],"parameters":[{"name":"id","description":"ID of the Metadata URL to update.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"Configuration for the Metadata URL.","required":true,"allowMultiple":false,"type":"MetadataUrl","paramType":"body"}],"responseMessages":[{"code":200,"message":"Metadata URL updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":404,"message":"Resource not found.","responseModel":"ApiResult"},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]},{"method":"DELETE","summary":"Delete a Metadata URL by ID.","notes":"Delete Metadata URL with the specified ID. A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error.","type":"ApiResult","nickname":"deleteMetadataUrl","parameters":[{"name":"id","description":"ID of Metadata URL to delete.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Metadata URL deleted."},{"code":404,"message":"Resource not found.","responseModel":"ApiResult"},{"code":422,"message":"Resource is in use and cannot be deleted.","responseModel":"ApiResult"}]}]}],"models":{"MetadataUrl":{"id":"MetadataUrl","description":"Metadata URL and corresponding Signature Verification Certificate.","required":["name","url"],"properties":{"id":{"type":"string","description":"The persistent, unique ID for the Metadata Url. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified."},"name":{"type":"string","description":"The name for the Metadata URL."},"url":{"type":"string","description":"The Metadata URL."},"certView":{"$ref":"CertView","description":"The Signature Verification Certificate details. This property is read-only and is always ignored on a POST or PUT."},"x509File":{"$ref":"X509File","description":"Data of the Signature Verification Certificate for the Metadata URL."},"validateSignature":{"type":"boolean","description":"Perform Metadata Signature Validation. The default value is TRUE."}}},"ValidationError":{"id":"ValidationError","description":"A data input validation error.","properties":{"errorId":{"type":"string","description":"Error identifier."},"message":{"type":"string","description":"User-friendly error description."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"fieldPath":{"type":"string","description":"The path to the model field to which the error relates, if one exists."}}},"MetadataUrls":{"id":"MetadataUrls","properties":{"items":{"type":"array","description":"The list of Metadata URL items.","items":{"$ref":"MetadataUrl"}}}},"X509File":{"id":"X509File","description":"Encoded certificate data.","required":["fileData"],"properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified."},"fileData":{"type":"string","description":"The certificate data in PEM format. New line characters should be omitted or encoded in this value."},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]}}},"ApiResult":{"id":"ApiResult","description":"Details on the result of the operation.","properties":{"resultId":{"type":"string","description":"Result identifier."},"message":{"type":"string","description":"Success or error message."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"validationErrors":{"type":"array","description":"List of validation errors, if any.","items":{"$ref":"ValidationError"}}}},"CertView":{"id":"CertView","description":"Certificate details.","properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate."},"serialNumber":{"type":"string","description":"The serial number assigned by the CA."},"subjectDN":{"type":"string","description":"The subject's distinguished name."},"subjectAlternativeNames":{"type":"array","description":"The subject alternative names (SAN).","items":{"type":"string"}},"issuerDN":{"type":"string","description":"The issuer's distinguished name."},"validFrom":{"type":"string","format":"date-time","description":"The start date from which the item is valid, in ISO 8601 format (UTC)."},"expires":{"type":"string","format":"date-time","description":"The end date up until which the item is valid, in ISO 8601 format (UTC)."},"keyAlgorithm":{"type":"string","description":"The public key algorithm."},"keySize":{"type":"integer","format":"int32","description":"The public key size."},"signatureAlgorithm":{"type":"string","description":"The signature algorithm."},"version":{"type":"integer","format":"int32","description":"The X.509 version to which the item conforms."},"sha1Fingerprint":{"type":"string","description":"SHA-1 fingerprint in Hex encoding."},"sha256Fingerprint":{"type":"string","description":"SHA-256 fingerprint in Hex encoding."},"status":{"$ref":"CertificateValidity","description":"Status of the item.","enum":["VALID","EXPIRED","NOT_YET_VALID","REVOKED"]},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]}}}}}