{"apiVersion":"v1","swaggerVersion":"1.2","basePath":"https://ip-10-101-29-72:9999/pf-admin-api/v1","resourcePath":"/certificates/ca","produces":["application/json"],"apis":[{"path":"/certificates/ca","operations":[{"method":"GET","summary":"Get list of trusted certificate authorities.","notes":"","type":"CertViews","nickname":"getTrustedCAs","parameters":[],"responseMessages":[{"code":200,"message":"Success."}]}]},{"path":"/certificates/ca/{id}","operations":[{"method":"GET","summary":"Retrieve details of a trusted certificate authority.","notes":"","type":"CertView","nickname":"getTrustedCert","parameters":[{"name":"id","description":"ID of the trusted certificate authority to retrieve.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":404,"message":"Resource not found."}]},{"method":"DELETE","summary":"Delete a trusted certificate authority.","notes":"If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error.","type":"ApiResult","nickname":"deleteTrustedCA","parameters":[{"name":"id","description":"ID of the trusted certificate authority to delete.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Certitifcate Authority deleted."},{"code":404,"message":"Resource not found."}]}]},{"path":"/certificates/ca/import","operations":[{"method":"POST","summary":"Import a new trusted certificate authority.","notes":"","type":"CertView","nickname":"importTrustedCA","consumes":["application/json"],"parameters":[{"name":"body","description":"File data to import.","required":true,"allowMultiple":false,"type":"X509File","paramType":"body"}],"responseMessages":[{"code":201,"message":"Certificate Authority imported."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":422,"message":"Validation error(s) occurred."}]}]},{"path":"/certificates/ca/{id}/file","operations":[{"method":"GET","summary":"Download the certificate from a given trusted certificate authority.","notes":"For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json.","type":"string","nickname":"exportCertificateFile","parameters":[{"name":"id","description":"ID of the trusted certificate authority.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":404,"message":"Resource not found."}]}]}],"models":{"CertViews":{"id":"CertViews","description":"A collection of Certificate items.","properties":{"items":{"type":"array","description":"The actual list of certificate instances.","items":{"$ref":"CertView"}}}},"ValidationError":{"id":"ValidationError","description":"A data input validation error.","properties":{"errorId":{"type":"string","description":"Error identifier."},"message":{"type":"string","description":"User-friendly error description."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"fieldPath":{"type":"string","description":"The path to the model field to which the error relates, if one exists."}}},"X509File":{"id":"X509File","description":"Encoded certificate data.","required":["fileData"],"properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified."},"fileData":{"type":"string","description":"The certificate data in PEM format. New line characters should be omitted or encoded in this value."},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]}}},"ApiResult":{"id":"ApiResult","description":"Details on the result of the operation.","properties":{"resultId":{"type":"string","description":"Result identifier."},"message":{"type":"string","description":"Success or error message."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"validationErrors":{"type":"array","description":"List of validation errors, if any.","items":{"$ref":"ValidationError"}}}},"CertView":{"id":"CertView","description":"Certificate details.","properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate."},"serialNumber":{"type":"string","description":"The serial number assigned by the CA."},"subjectDN":{"type":"string","description":"The subject's distinguished name."},"subjectAlternativeNames":{"type":"array","description":"The subject alternative names (SAN).","items":{"type":"string"}},"issuerDN":{"type":"string","description":"The issuer's distinguished name."},"validFrom":{"type":"string","format":"date-time","description":"The start date from which the item is valid, in ISO 8601 format (UTC)."},"expires":{"type":"string","format":"date-time","description":"The end date up until which the item is valid, in ISO 8601 format (UTC)."},"keyAlgorithm":{"type":"string","description":"The public key algorithm."},"keySize":{"type":"integer","format":"int32","description":"The public key size."},"signatureAlgorithm":{"type":"string","description":"The signature algorithm."},"version":{"type":"integer","format":"int32","description":"The X.509 version to which the item conforms."},"sha1Fingerprint":{"type":"string","description":"SHA-1 fingerprint in Hex encoding."},"sha256Fingerprint":{"type":"string","description":"SHA-256 fingerprint in Hex encoding."},"status":{"$ref":"CertificateValidity","description":"Status of the item.","enum":["VALID","EXPIRED","NOT_YET_VALID","REVOKED"]},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]}}}}}