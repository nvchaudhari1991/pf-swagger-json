{"apiVersion":"v1","swaggerVersion":"1.2","basePath":"https://ip-10-101-29-72:9999/pf-admin-api/v1","resourcePath":"/session","produces":["application/json"],"apis":[{"path":"/session/settings","operations":[{"method":"GET","summary":"Get general session management settings.","notes":"","type":"SessionSettings","nickname":"getSessionSettings","parameters":[],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."}]},{"method":"PUT","summary":"Update general session management settings.","notes":"","type":"SessionSettings","nickname":"updateSessionSettings","consumes":["application/json"],"parameters":[{"name":"body","description":"Session settings.","required":true,"allowMultiple":false,"type":"SessionSettings","paramType":"body"}],"responseMessages":[{"code":200,"message":"General session management settings updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/session/authenticationSessionPolicies/global","operations":[{"method":"GET","summary":"Get the global authentication session policy.","notes":"","type":"GlobalAuthenticationSessionPolicy","nickname":"getGlobalPolicy","parameters":[],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."}]},{"method":"PUT","summary":"Update the global authentication session policy.","notes":"","type":"GlobalAuthenticationSessionPolicy","nickname":"updateGlobalPolicy","consumes":["application/json"],"parameters":[{"name":"body","description":"Global authentication session policy.","required":true,"allowMultiple":false,"type":"GlobalAuthenticationSessionPolicy","paramType":"body"}],"responseMessages":[{"code":200,"message":"Global authentication session policy updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/session/applicationSessionPolicy","operations":[{"method":"GET","summary":"Get the application session policy.","notes":"","type":"ApplicationSessionPolicy","nickname":"getApplicationPolicy","parameters":[],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."}]},{"method":"PUT","summary":"Update the application session policy.","notes":"","type":"ApplicationSessionPolicy","nickname":"updateApplicationPolicy","consumes":["application/json"],"parameters":[{"name":"body","description":"Application session policy.","required":true,"allowMultiple":false,"type":"ApplicationSessionPolicy","paramType":"body"}],"responseMessages":[{"code":200,"message":"Application session policy updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/session/authenticationSessionPolicies","operations":[{"method":"GET","summary":"Get list of session policies.","notes":"Get a list of all session policies that are associated with specific authentication sources.","type":"AuthenticationSessionPolicies","nickname":"getSourcePolicies","parameters":[],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."}]},{"method":"POST","summary":"Create a new session policy.","notes":"Create a new session policy for a specified authentication source. If the session policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.","type":"AuthenticationSessionPolicy","nickname":"createSourcePolicy","consumes":["application/json"],"parameters":[{"name":"body","description":"Configuration for new policy.","required":true,"allowMultiple":false,"type":"AuthenticationSessionPolicy","paramType":"body"}],"responseMessages":[{"code":201,"message":"Authentication session policy created."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/session/authenticationSessionPolicies/{id}","operations":[{"method":"GET","summary":"Find session policy by ID.","notes":"Get the session policy with the specified ID. A 404 status code is returned for nonexistent IDs.","type":"AuthenticationSessionPolicy","nickname":"getSourcePolicy","parameters":[{"name":"id","description":"ID of the session policy to fetch.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":404,"message":"Resource not found.","responseModel":"ApiResult"}]},{"method":"PUT","summary":"Update a session policy.","notes":"Update the session policy with the matching ID. If the policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.","type":"AuthenticationSessionPolicy","nickname":"updateSourcePolicy","consumes":["application/json"],"parameters":[{"name":"id","description":"ID of the session policy to update.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"Configuration for updated policy.","required":true,"allowMultiple":false,"type":"AuthenticationSessionPolicy","paramType":"body"}],"responseMessages":[{"code":200,"message":"Authentication session policy updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":404,"message":"Resource not found.","responseModel":"ApiResult"},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]},{"method":"DELETE","summary":"Delete a session policy.","notes":"Delete the session policy with the specified ID. A 404 status code is returned for nonexistent IDs. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error.","type":"ApiResult","nickname":"deleteSourcePolicy","parameters":[{"name":"id","description":"ID of session policy to delete.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Authentication session policy deleted."},{"code":403,"message":"PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."},{"code":404,"message":"Resource not found."}]}]}],"models":{"SessionSettings":{"id":"SessionSettings","description":"General settings related to session management.","properties":{"trackAdapterSessionsForLogout":{"type":"boolean","description":"Determines whether adapter sessions are tracked for cleanup during single logout. The default is false."},"revokeUserSessionOnLogout":{"type":"boolean","description":"Determines whether the user's session is revoked on logout. If this property is not provided on a PUT, the setting is left unchanged."},"sessionRevocationLifetime":{"type":"integer","format":"int32","description":"How long a session revocation is tracked and stored, in minutes. If this property is not provided on a PUT, the setting is left unchanged."}}},"AuthenticationSessionPolicy":{"id":"AuthenticationSessionPolicy","description":"The session policy for a specified authentication source.","required":["authenticationSource","enableSessions"],"properties":{"id":{"type":"string","description":"The persistent, unique ID for the session policy. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified."},"authenticationSource":{"$ref":"AuthenticationSource","description":"The authentication source this session policy applies to. This property cannot be changed after the policy is created."},"enableSessions":{"type":"boolean","description":"Determines whether sessions are enabled for the authentication source. This value overrides the enableSessions value from the global authentication session policy."},"persistent":{"type":"boolean","description":"Determines whether sessions for the authentication source are persistent. This value overrides the persistentSessions value from the global authentication session policy. This field is ignored if enableSessions is false."},"idleTimeoutMins":{"type":"integer","format":"int32","description":"The idle timeout period, in minutes. If omitted, the value from the global authentication session policy will be used. If set to -1, the idle timeout will be set to the maximum timeout. If a value is provided for this property, a value must also be provided for maxTimeoutMins."},"maxTimeoutMins":{"type":"integer","format":"int32","description":"The maximum timeout period, in minutes. If omitted, the value from the global authentication session policy will be used. If set to -1, sessions do not expire. If a value is provided for this property, a value must also be provided for idleTimeoutMins."},"timeoutDisplayUnit":{"$ref":"SessionTimeUnit","description":"The display unit for session timeout periods in the PingFederate administrative console. When the display unit is HOURS or DAYS, the timeout values in minutes must correspond to a whole number value for the specified unit.","enum":["MINUTES","HOURS","DAYS"]},"authnContextSensitive":{"type":"boolean","description":"Determines whether the requested authentication context is considered when deciding whether an existing session is valid for a given request. The default is false."}}},"AuthenticationSource":{"id":"AuthenticationSource","description":"An authentication source (IdP adapter or IdP connection).","required":["type","sourceRef"],"properties":{"type":{"$ref":"AuthenticationSourceType","description":"The type of this authentication source.","enum":["IDP_ADAPTER","IDP_CONNECTION"]},"sourceRef":{"$ref":"ResourceLink","description":"A reference to the authentication source."}}},"ValidationError":{"id":"ValidationError","description":"A data input validation error.","properties":{"errorId":{"type":"string","description":"Error identifier."},"message":{"type":"string","description":"User-friendly error description."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"fieldPath":{"type":"string","description":"The path to the model field to which the error relates, if one exists."}}},"ResourceLink":{"id":"ResourceLink","description":"A reference to a resource.","required":["id"],"properties":{"id":{"type":"string","description":"The ID of the resource."},"location":{"type":"string","description":"A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null."}}},"AuthenticationSessionPolicies":{"id":"AuthenticationSessionPolicies","description":"A collection of authentication session policies.","properties":{"items":{"type":"array","description":"The actual list of policies.","items":{"$ref":"AuthenticationSessionPolicy"}}}},"ApiResult":{"id":"ApiResult","description":"Details on the result of the operation.","properties":{"resultId":{"type":"string","description":"Result identifier."},"message":{"type":"string","description":"Success or error message."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"validationErrors":{"type":"array","description":"List of validation errors, if any.","items":{"$ref":"ValidationError"}}}},"ApplicationSessionPolicy":{"id":"ApplicationSessionPolicy","description":"Session controls for user facing PingFederate application endpoints, such as the profile management endpoint.","properties":{"idleTimeoutMins":{"type":"integer","format":"int32","description":"The idle timeout period, in minutes. If set to -1, the idle timeout will be set to the maximum timeout. The default is 60."},"maxTimeoutMins":{"type":"integer","format":"int32","description":"The maximum timeout period, in minutes. If set to -1, sessions do not expire. The default is 480."}}},"GlobalAuthenticationSessionPolicy":{"id":"GlobalAuthenticationSessionPolicy","description":"The global policy for authentication sessions.","required":["enableSessions"],"properties":{"enableSessions":{"type":"boolean","description":"Determines whether authentication sessions are enabled globally."},"persistentSessions":{"type":"boolean","description":"Determines whether authentication sessions are persistent by default. Persistent sessions are linked to a persistent cookie and stored in a data store. This field is ignored if enableSessions is false."},"idleTimeoutMins":{"type":"integer","format":"int32","description":"The idle timeout period, in minutes. If set to -1, the idle timeout will be set to the maximum timeout. The default is 60."},"idleTimeoutDisplayUnit":{"$ref":"SessionTimeUnit","description":"The display unit for the idle timeout period in the PingFederate administrative console. When the display unit is HOURS or DAYS, the timeout value in minutes must correspond to a whole number value for the specified unit.","enum":["MINUTES","HOURS","DAYS"]},"maxTimeoutMins":{"type":"integer","format":"int32","description":"The maximum timeout period, in minutes. If set to -1, sessions do not expire. The default is 480."},"maxTimeoutDisplayUnit":{"$ref":"SessionTimeUnit","description":"The display unit for the maximum timeout period in the PingFederate administrative console. When the display unit is HOURS or DAYS, the timeout value in minutes must correspond to a whole number value for the specified unit.","enum":["MINUTES","HOURS","DAYS"]}}}}}