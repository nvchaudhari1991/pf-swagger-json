{"apiVersion":"v1","swaggerVersion":"1.2","basePath":"https://ip-10-101-29-72:9999/pf-admin-api/v1","resourcePath":"/oauth/authServerSettings","produces":["application/json"],"apis":[{"path":"/oauth/authServerSettings","operations":[{"method":"GET","summary":"Get the Authorization Server Settings.","notes":"","type":"AuthorizationServerSettings","nickname":"getAuthorizationServerSettings","parameters":[],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."}]},{"method":"PUT","summary":"Update the Authorization Server Settings.","notes":"","type":"AuthorizationServerSettings","nickname":"updateAuthorizationServerSettings","consumes":["application/json"],"parameters":[{"name":"body","description":"Configuration for updated server settings.","required":true,"allowMultiple":false,"type":"AuthorizationServerSettings","paramType":"body"}],"responseMessages":[{"code":200,"message":"Authorization Server Settings updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/commonScopes","operations":[{"method":"POST","summary":"Add a new common scope.","notes":"","type":"ScopeEntry","nickname":"addCommonScope","consumes":["application/json"],"parameters":[{"name":"body","description":"The scope definition.","required":true,"allowMultiple":false,"type":"ScopeEntry","paramType":"body"}],"responseMessages":[{"code":201,"message":"Common Scope added."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/commonScopes/{name}","operations":[{"method":"GET","summary":"Get an existing common scope.","notes":"","type":"ScopeEntry","nickname":"getCommonScope","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the common scope.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."}]},{"method":"PUT","summary":"Update an existing common scope.","notes":"","type":"ScopeEntry","nickname":"updateCommonScope","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the common scope.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"The scope definition","required":true,"allowMultiple":false,"type":"ScopeEntry","paramType":"body"}],"responseMessages":[{"code":200,"message":"Common Scope updated."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]},{"method":"DELETE","summary":"Remove an existing common scope.","notes":"","type":"ApiResult","nickname":"removeCommonScope","parameters":[{"name":"name","description":"Name of the common scope.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Common Scope deleted."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/commonScopeGroups","operations":[{"method":"POST","summary":"Create a new common scope group.","notes":"","type":"ScopeGroupEntry","nickname":"addCommonScopeGroup","consumes":["application/json"],"parameters":[{"name":"body","description":"The scope group definition","required":true,"allowMultiple":false,"type":"ScopeGroupEntry","paramType":"body"}],"responseMessages":[{"code":201,"message":"Common Scope Group created."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/commonScopeGroups/{name}","operations":[{"method":"GET","summary":"Get an existing common scope group.","notes":"","type":"ScopeGroupEntry","nickname":"getCommonScopeGroup","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the common scope group.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."}]},{"method":"PUT","summary":"Update an existing common scope group.","notes":"","type":"ScopeGroupEntry","nickname":"updateCommonScopeGroup","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the common scope group.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"The scope group definition.","required":true,"allowMultiple":false,"type":"ScopeGroupEntry","paramType":"body"}],"responseMessages":[{"code":200,"message":"Common Scope Group updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]},{"method":"DELETE","summary":"Remove an existing common scope group.","notes":"","type":"ApiResult","nickname":"removeCommonScopeGroup","parameters":[{"name":"name","description":"Name of the common scope group.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Common Scope Group deleted."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/exclusiveScopes","operations":[{"method":"POST","summary":"Add a new exclusive scope.","notes":"","type":"ScopeEntry","nickname":"addExclusiveScope","consumes":["application/json"],"parameters":[{"name":"body","description":"A new exclusive scope","required":true,"allowMultiple":false,"type":"ScopeEntry","paramType":"body"}],"responseMessages":[{"code":201,"message":"Exclusive Scope added."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/exclusiveScopes/{name}","operations":[{"method":"GET","summary":"Get an existing exclusive scope.","notes":"","type":"ScopeEntry","nickname":"getExclusiveScope","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the exclusive scope.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."}]},{"method":"PUT","summary":"Update an existing exclusive scope.","notes":"","type":"ScopeEntry","nickname":"updateExclusiveScope","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the exclusive scope.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"The scope definition.","required":true,"allowMultiple":false,"type":"ScopeEntry","paramType":"body"}],"responseMessages":[{"code":200,"message":"Exclusive Scope updated."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]},{"method":"DELETE","summary":"Remove an existing exclusive scope.","notes":"","type":"ApiResult","nickname":"removeExclusiveScope","parameters":[{"name":"name","description":"Name of the exclusive scope.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Exclusive Scope deleted."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."}]}]},{"path":"/oauth/authServerSettings/scopes/exclusiveScopeGroups","operations":[{"method":"POST","summary":"Create a new exclusive scope group.","notes":"","type":"ScopeGroupEntry","nickname":"addExclusiveScopeGroup","consumes":["application/json"],"parameters":[{"name":"body","description":"The scope group definition","required":true,"allowMultiple":false,"type":"ScopeGroupEntry","paramType":"body"}],"responseMessages":[{"code":201,"message":"Exclusive Scope Group created."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]},{"path":"/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}","operations":[{"method":"GET","summary":"Get an existing exclusive scope group.","notes":"","type":"ScopeGroupEntry","nickname":"getExclusiveScopeGroup","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the exclusive scope group.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."}]},{"method":"PUT","summary":"Update an existing exclusive scope group.","notes":"","type":"ScopeGroupEntry","nickname":"updateExclusiveScopeGroups","consumes":["application/json"],"parameters":[{"name":"name","description":"Name of the exclusive scope group.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"The scope group definition","required":true,"allowMultiple":false,"type":"ScopeGroupEntry","paramType":"body"}],"responseMessages":[{"code":200,"message":"Exclusive Scope Group updated."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]},{"method":"DELETE","summary":"Remove an existing exclusive scope group.","notes":"","type":"ApiResult","nickname":"removeExclusiveScopeGroup","parameters":[{"name":"name","description":"Name of the exclusive scope group.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Exclusive Scope Group deleted."},{"code":403,"message":"PingFederate does not have its OAuth 2.0 authorization server role enabled. Operation not available."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred.","responseModel":"ApiResult"}]}]}],"models":{"PersistentGrantContract":{"id":"PersistentGrantContract","required":["coreAttributes"],"properties":{"coreAttributes":{"type":"array","description":"This is a read-only list of persistent grant attributes and includes USER_KEY and USER_NAME. Changes to this field will be ignored.","items":{"$ref":"PersistentGrantAttribute"}},"extendedAttributes":{"type":"array","description":"A list of additional attributes for the persistent grant contract.","items":{"$ref":"PersistentGrantAttribute"}}}},"ScopeGroupEntry":{"id":"ScopeGroupEntry","description":"A scope group name and its description.","required":["name","description","scopes"],"properties":{"name":{"type":"string","description":"The name of the scope group."},"description":{"type":"string","description":"The description of the scope group."},"scopes":{"$ref":"Set","description":"The set of scopes for this scope group.","items":{"type":"string"}}}},"PersistentGrantAttribute":{"id":"PersistentGrantAttribute","description":"A persistent grant contract attribute.","required":["name"],"properties":{"name":{"type":"string","description":"The name of this attribute."}}},"ValidationError":{"id":"ValidationError","description":"A data input validation error.","properties":{"errorId":{"type":"string","description":"Error identifier."},"message":{"type":"string","description":"User-friendly error description."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"fieldPath":{"type":"string","description":"The path to the model field to which the error relates, if one exists."}}},"ScopeEntry":{"id":"ScopeEntry","description":"A scope name and its description.","required":["name","description"],"properties":{"name":{"type":"string","description":"The name of the scope."},"description":{"type":"string","description":"The description of the scope that appears when the user is prompted for authorization."},"dynamic":{"type":"boolean","description":"True if the scope is dynamic. (Defaults to false)"}}},"ResourceLink":{"id":"ResourceLink","description":"A reference to a resource.","required":["id"],"properties":{"id":{"type":"string","description":"The ID of the resource."},"location":{"type":"string","description":"A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null."}}},"ApiResult":{"id":"ApiResult","description":"Details on the result of the operation.","properties":{"resultId":{"type":"string","description":"Result identifier."},"message":{"type":"string","description":"Success or error message."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"validationErrors":{"type":"array","description":"List of validation errors, if any.","items":{"$ref":"ValidationError"}}}},"AuthorizationServerSettings":{"id":"AuthorizationServerSettings","description":"Authorization Server Settings attributes.","required":["defaultScopeDescription","authorizationCodeTimeout","authorizationCodeEntropy","refreshTokenLength","refreshRollingInterval","registeredAuthorizationPath","pendingAuthorizationTimeout","devicePollingInterval","bypassActivationCodeConfirmation"],"properties":{"defaultScopeDescription":{"type":"string","description":"The default scope description."},"scopes":{"type":"array","description":"The list of common scopes.","items":{"$ref":"ScopeEntry"}},"scopeGroups":{"type":"array","description":"The list of common scope groups.","items":{"$ref":"ScopeGroupEntry"}},"exclusiveScopes":{"type":"array","description":"The list of exclusive scopes.","items":{"$ref":"ScopeEntry"}},"exclusiveScopeGroups":{"type":"array","description":"The list of exclusive scope groups.","items":{"$ref":"ScopeGroupEntry"}},"authorizationCodeTimeout":{"type":"integer","format":"int32","description":"The authorization code timeout, in seconds."},"authorizationCodeEntropy":{"type":"integer","format":"int32","description":"The authorization code entropy, in bytes."},"trackUserSessionsForLogout":{"type":"boolean","description":"Determines whether user sessions are tracked for logout. If this property is not provided on a PUT, the setting is left unchanged."},"tokenEndpointBaseUrl":{"type":"string","description":"The token endpoint base URL used to validate the 'aud' claim during Private Key JWT Client Authentication."},"persistentGrantLifetime":{"type":"integer","format":"int64","description":"The persistent grant lifetime. The default value is indefinite."},"persistentGrantLifetimeUnit":{"$ref":"PersistentGrantLifetimeUnit","description":"The persistent grant lifetime unit.","enum":["MINUTES","DAYS","HOURS"]},"persistentGrantIdleTimeout":{"type":"integer","format":"int64","description":"The persistent grant idle timeout."},"persistentGrantIdleTimeoutTimeUnit":{"$ref":"PersistentGrantLifetimeUnit","description":"The persistent grant idle timeout time unit.","enum":["MINUTES","DAYS","HOURS"]},"refreshTokenLength":{"type":"integer","format":"int32","description":"The refresh token length in number of characters."},"rollRefreshTokenValues":{"type":"boolean","description":"The roll refresh token values default policy. The default value is true."},"refreshRollingInterval":{"type":"integer","format":"int64","description":"The minimum interval to roll refresh tokens, in hours."},"persistentGrantReuseGrantTypes":{"type":"array","description":"The grant types that the OAuth AS can reuse rather than creating a new grant for each request.","items":{"$ref":"GrantType","enum":["IMPLICIT","AUTHORIZATION_CODE","RESOURCE_OWNER_CREDENTIALS","CLIENT_CREDENTIALS","REFRESH_TOKEN","EXTENSION","DEVICE_CODE","ACCESS_TOKEN_VALIDATION","CIBA","TOKEN_EXCHANGE"]}},"persistentGrantContract":{"$ref":"PersistentGrantContract","description":"The persistent grant contract defines attributes that are associated with OAuth persistent grants."},"bypassAuthorizationForApprovedGrants":{"type":"boolean","description":"Bypass authorization for previously approved persistent grants. The default value is false."},"allowUnidentifiedClientROCreds":{"type":"boolean","description":"Allow unidentified clients to request resource owner password credentials grants. The default value is false."},"allowedOrigins":{"type":"array","description":"The list of allowed origins.","items":{"type":"string"}},"allowUnidentifiedClientExtensionGrants":{"type":"boolean","description":"Allow unidentified clients to request extension grants. The default value is false."},"adminWebServicePcvRef":{"$ref":"ResourceLink","description":"The password credential validator reference that is used for authenticating access to the OAuth Administrative Web Service."},"atmIdForOAuthGrantManagement":{"type":"string","description":"The ID of the Access Token Manager used for OAuth enabled grant management."},"scopeForOAuthGrantManagement":{"type":"string","description":"The OAuth scope to validate when accessing grant management service."},"userAuthorizationUrl":{"type":"string","description":"The URL used to generate 'verification_url' and 'verification_url_complete' values in a Device Authorization request"},"registeredAuthorizationPath":{"type":"string","description":"The Registered Authorization Path is concatenated to PingFederate base URL to generate 'verification_url' and 'verification_url_complete' values in a Device Authorization request. PingFederate listens to this path if specified"},"pendingAuthorizationTimeout":{"type":"integer","format":"int32","description":"The 'device_code' and 'user_code' timeout, in seconds."},"devicePollingInterval":{"type":"integer","format":"int32","description":"The amount of time client should wait between polling requests, in seconds."},"bypassActivationCodeConfirmation":{"type":"boolean","description":"Indicates if the Activation Code Confirmation page should be bypassed if 'verification_url_complete' is used by the end user to authorize a device."},"userAuthorizationConsentPageSetting":{"$ref":"UserAuthorizationConsentPageSetting","description":"User Authorization Consent Page setting to use PingFederate's internal consent page or an external system","enum":["INTERNAL","ADAPTER"]},"userAuthorizationConsentAdapter":{"type":"string","description":"Adapter ID of the external consent adapter to be used for the consent page user interface."},"approvedScopesAttribute":{"type":"string","description":"Attribute from the external consent adapter's contract, intended for storing approved scopes returned by the external consent page."}}}}}