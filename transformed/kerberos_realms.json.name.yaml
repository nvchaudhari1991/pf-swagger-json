basePath: /pf-admin-api/v1
definitions:
  ApiResult:
    description: Details on the result of the operation.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      message:
        description: Success or error message.
        type: string
      resultId:
        description: Result identifier.
        type: string
      validationErrors:
        description: 'List of validation errors, if any.'
        items:
          $ref: '#/definitions/ValidationError'
        type: array
  KerberosRealm:
    properties:
      id:
        description: >-
          The persistent, unique ID for the Kerberos Realm. It can be any
          combination of [a-z0-9._-]. This property is system-assigned if not
          specified.
        type: string
      kerberosEncryptedPassword:
        description: >-
          For GET requests, this field contains the encrypted Domain/Realm
          password, if one exists. For POST and PUT requests, if you wish to
          reuse the existing password, this field should be passed back
          unchanged.
        type: string
      kerberosPassword:
        description: >-
          The Domain/Realm password. GETs will not return this attribute. To
          update this field, specify the new value in this attribute.
        type: string
      kerberosRealmName:
        description: The Domain/Realm name used for display in UI screens.
        type: string
      kerberosUsername:
        description: The Domain/Realm username.
        type: string
      keyDistributionCenters:
        description: The Domain Controller/Key Distribution Center Host Action Names.
        items:
          type: string
        type: array
      suppressDomainNameConcatenation:
        description: >-
          Controls whether the KDC hostnames and the realm name are concatenated
          in the auto-generated krb5.conf file. Default is false.
        type: boolean
    required:
      - kerberosRealmName
      - kerberosUsername
  KerberosRealms:
    description: A collection of Kerberos Realms.
    properties:
      items:
        description: The actual list of kerberos realms.
        items:
          $ref: '#/definitions/KerberosRealm'
        type: array
  KerberosRealmsSettings:
    description: Settings for all of the Kerberos Realms.
    properties:
      debugLogOutput:
        description: Reference to the default logging.
        type: boolean
      forceTcp:
        description: Reference to the default security.
        type: boolean
      kdcRetries:
        description: Reference to the default Key Distribution Center Retries.
        type: string
      kdcTimeout:
        description: Reference to the default Key Distribution Center Timeout (in seconds).
        type: string
    required:
      - kdcRetries
      - kdcTimeout
  ValidationError:
    description: A data input validation error.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      errorId:
        description: Error identifier.
        type: string
      fieldPath:
        description: 'The path to the model field to which the error relates, if one exists.'
        type: string
      message:
        description: User-friendly error description.
        type: string
host: 'ip-10-101-29-72:9999'
info:
  title: 'ip-10-101-29-72:9999'
  version: v1
paths:
  /kerberos/realms:
    get:
      operationId: getKerberosRealms
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/KerberosRealms'
      summary: Gets the Kerberos Realms.
    post:
      consumes:
        - application/json
      description: >-
        Create a new Kerberos Realm. If the Kerberos Realm is not properly
        configured, a 422 status code is returned along with a list of
        validation errors that must be corrected.
      operationId: createKerberosRealm
      parameters:
        - description: Configuration for new policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/KerberosRealm'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/KerberosRealm'
        '201':
          description: Kerberos realm created.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Create a new Kerberos Realm.
  /kerberos/realms/settings:
    get:
      operationId: getKerberosRealmSettings
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/KerberosRealmsSettings'
      summary: Gets the Kerberos Realms Settings.
    put:
      consumes:
        - application/json
      operationId: updateSettings
      parameters:
        - description: Kerberos Realms Settings.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/KerberosRealmsSettings'
      produces:
        - application/json
      responses:
        '200':
          description: Settings updated.
          schema:
            $ref: '#/definitions/KerberosRealmsSettings'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Set/Update the Kerberos Realms Settings.
  '/kerberos/realms/{id}':
    delete:
      description: >-
        Delete a Kerberos Realm with the specified ID. A 404 status code is
        returned for nonexistent IDs. Note: If the request succeeds, the
        response body is empty. If the request fails, an ApiResult is returned
        with details of the error.
      operationId: deleteKerberosRealm
      parameters:
        - description: ID of Kerberos Realm to delete.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Kerberos realm deleted.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Delete a Kerberos Realm.
    get:
      description: >-
        Get a Kerberos Realm with the specified ID. A 404 status code is
        returned for nonexistent IDs.
      operationId: getKerberosRealm
      parameters:
        - description: ID of the Kerberos Realm to fetch.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/KerberosRealm'
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Find a Kerberos Realm by ID.
    put:
      description: >-
        Update a Kerberos Realm with the specified ID. A 404 status code is
        returned for nonexistent IDs.
      operationId: updateKerberosRealm
      parameters:
        - description: ID of the Kerberos Realm to update.
          in: path
          name: id
          required: true
          type: string
        - description: Configuration for updated Domain/Realm.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/KerberosRealm'
      produces:
        - application/json
      responses:
        '200':
          description: Kerberos realm updated.
          schema:
            $ref: '#/definitions/KerberosRealm'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update a Kerberos Realm by ID.
schemes:
  - https
swagger: '2.0'

