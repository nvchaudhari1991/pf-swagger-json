basePath: /pf-admin-api/v1
definitions:
  ApiResult:
    description: Details on the result of the operation.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      message:
        description: Success or error message.
        type: string
      resultId:
        description: Result identifier.
        type: string
      validationErrors:
        description: 'List of validation errors, if any.'
        items:
          $ref: '#/definitions/ValidationError'
        type: array
  CertView:
    description: Certificate details.
    properties:
      cryptoProvider:
        $ref: '#/definitions/CryptoProvider'
        description: >-
          Cryptographic Provider. This is only applicable if Hybrid HSM mode is
          true.
        enum:
          - LOCAL
          - HSM
      expires:
        description: >-
          The end date up until which the item is valid, in ISO 8601 format
          (UTC).
        format: date-time
        type: string
      id:
        description: 'The persistent, unique ID for the certificate.'
        type: string
      issuerDN:
        description: The issuer's distinguished name.
        type: string
      keyAlgorithm:
        description: The public key algorithm.
        type: string
      keySize:
        description: The public key size.
        format: int32
        type: integer
      serialNumber:
        description: The serial number assigned by the CA.
        type: string
      sha1Fingerprint:
        description: SHA-1 fingerprint in Hex encoding.
        type: string
      sha256Fingerprint:
        description: SHA-256 fingerprint in Hex encoding.
        type: string
      signatureAlgorithm:
        description: The signature algorithm.
        type: string
      status:
        $ref: '#/definitions/CertificateValidity'
        description: Status of the item.
        enum:
          - VALID
          - EXPIRED
          - NOT_YET_VALID
          - REVOKED
      subjectAlternativeNames:
        description: The subject alternative names (SAN).
        items:
          type: string
        type: array
      subjectDN:
        description: The subject's distinguished name.
        type: string
      validFrom:
        description: 'The start date from which the item is valid, in ISO 8601 format (UTC).'
        format: date-time
        type: string
      version:
        description: The X.509 version to which the item conforms.
        format: int32
        type: integer
  MetadataUrl:
    description: Metadata URL and corresponding Signature Verification Certificate.
    properties:
      certView:
        $ref: '#/definitions/CertView'
        description: >-
          The Signature Verification Certificate details. This property is
          read-only and is always ignored on a POST or PUT.
      id:
        description: >-
          The persistent, unique ID for the Metadata Url. It can be any
          combination of [a-z0-9._-]. This property is system-assigned if not
          specified.
        type: string
      name:
        description: The name for the Metadata URL.
        type: string
      url:
        description: The Metadata URL.
        type: string
      validateSignature:
        description: Perform Metadata Signature Validation. The default value is TRUE.
        type: boolean
      x509File:
        $ref: '#/definitions/X509File'
        description: Data of the Signature Verification Certificate for the Metadata URL.
    required:
      - name
      - url
  MetadataUrls:
    properties:
      items:
        description: The list of Metadata URL items.
        items:
          $ref: '#/definitions/MetadataUrl'
        type: array
  ValidationError:
    description: A data input validation error.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      errorId:
        description: Error identifier.
        type: string
      fieldPath:
        description: 'The path to the model field to which the error relates, if one exists.'
        type: string
      message:
        description: User-friendly error description.
        type: string
  X509File:
    description: Encoded certificate data.
    properties:
      cryptoProvider:
        $ref: '#/definitions/CryptoProvider'
        description: >-
          Cryptographic Provider. This is only applicable if Hybrid HSM mode is
          true.
        enum:
          - LOCAL
          - HSM
      fileData:
        description: >-
          The certificate data in PEM format. New line characters should be
          omitted or encoded in this value.
        type: string
      id:
        description: >-
          The persistent, unique ID for the certificate. It can be any
          combination of [a-z0-9._-]. This property is system-assigned if not
          specified.
        type: string
    required:
      - fileData
host: 'ip-10-101-29-72:9999'
info:
  title: 'ip-10-101-29-72:9999'
  version: v1
paths:
  /metadataUrls:
    get:
      operationId: getMetadataUrls
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/MetadataUrls'
      summary: Get a list of Metadata URLs
    post:
      consumes:
        - application/json
      description: >-
        Add a new Metadata URL. If the Metadata URL is not properly configured,
        a 422 status code is returned along with a list of validation errors
        that must be corrected.
      operationId: addMetadataUrl
      parameters:
        - description: Configuration for a new Metadata URL.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MetadataUrl'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MetadataUrl'
        '201':
          description: Metadata URL added.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Add a new Metadata URL.
  '/metadataUrls/{id}':
    delete:
      description: >-
        Delete Metadata URL with the specified ID. A 404 status code is returned
        for nonexistent IDs. Note: If the request succeeds, the response body is
        empty. If the request fails, an ApiResult is returned with details of
        the error.
      operationId: deleteMetadataUrl
      parameters:
        - description: ID of Metadata URL to delete.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Metadata URL deleted.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
        '422':
          description: Resource is in use and cannot be deleted.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Delete a Metadata URL by ID.
    get:
      description: >-
        Get a Metadata URL with the specified ID. A 404 status code is returned
        for nonexistent IDs
      operationId: getMetadataUrl
      parameters:
        - description: ID of Metadata URL to fetch
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/MetadataUrl'
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Get a Metadata URL by ID.
    put:
      consumes:
        - application/json
      description: >-
        Update a Metadata URL by ID. If the Metadata URL is not properly
        configured, a 422 status code is returned along with a list of
        validation errors that must be corrected.
      operationId: updateMetadataUrl
      parameters:
        - description: ID of the Metadata URL to update.
          in: path
          name: id
          required: true
          type: string
        - description: Configuration for the Metadata URL.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MetadataUrl'
      produces:
        - application/json
      responses:
        '200':
          description: Metadata URL updated.
          schema:
            $ref: '#/definitions/MetadataUrl'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update a Metadata URL by ID.
schemes:
  - https
swagger: '2.0'

