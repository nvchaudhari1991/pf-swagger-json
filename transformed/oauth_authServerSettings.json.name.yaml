basePath: /pf-admin-api/v1
definitions:
  ApiResult:
    description: Details on the result of the operation.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      message:
        description: Success or error message.
        type: string
      resultId:
        description: Result identifier.
        type: string
      validationErrors:
        description: 'List of validation errors, if any.'
        items:
          $ref: '#/definitions/ValidationError'
        type: array
  AuthorizationServerSettings:
    description: Authorization Server Settings attributes.
    properties:
      adminWebServicePcvRef:
        $ref: '#/definitions/ResourceLink'
        description: >-
          The password credential validator reference that is used for
          authenticating access to the OAuth Administrative Web Service.
      allowUnidentifiedClientExtensionGrants:
        description: >-
          Allow unidentified clients to request extension grants. The default
          value is false.
        type: boolean
      allowUnidentifiedClientROCreds:
        description: >-
          Allow unidentified clients to request resource owner password
          credentials grants. The default value is false.
        type: boolean
      allowedOrigins:
        description: The list of allowed origins.
        items:
          type: string
        type: array
      approvedScopesAttribute:
        description: >-
          Attribute from the external consent adapter's contract, intended for
          storing approved scopes returned by the external consent page.
        type: string
      atmIdForOAuthGrantManagement:
        description: >-
          The ID of the Access Token Manager used for OAuth enabled grant
          management.
        type: string
      authorizationCodeEntropy:
        description: 'The authorization code entropy, in bytes.'
        format: int32
        type: integer
      authorizationCodeTimeout:
        description: 'The authorization code timeout, in seconds.'
        format: int32
        type: integer
      bypassActivationCodeConfirmation:
        description: >-
          Indicates if the Activation Code Confirmation page should be bypassed
          if 'verification_url_complete' is used by the end user to authorize a
          device.
        type: boolean
      bypassAuthorizationForApprovedGrants:
        description: >-
          Bypass authorization for previously approved persistent grants. The
          default value is false.
        type: boolean
      defaultScopeDescription:
        description: The default scope description.
        type: string
      devicePollingInterval:
        description: >-
          The amount of time client should wait between polling requests, in
          seconds.
        format: int32
        type: integer
      exclusiveScopeGroups:
        description: The list of exclusive scope groups.
        items:
          $ref: '#/definitions/ScopeGroupEntry'
        type: array
      exclusiveScopes:
        description: The list of exclusive scopes.
        items:
          $ref: '#/definitions/ScopeEntry'
        type: array
      pendingAuthorizationTimeout:
        description: 'The ''device_code'' and ''user_code'' timeout, in seconds.'
        format: int32
        type: integer
      persistentGrantContract:
        $ref: '#/definitions/PersistentGrantContract'
        description: >-
          The persistent grant contract defines attributes that are associated
          with OAuth persistent grants.
      persistentGrantIdleTimeout:
        description: The persistent grant idle timeout.
        format: int64
        type: integer
      persistentGrantIdleTimeoutTimeUnit:
        $ref: '#/definitions/PersistentGrantLifetimeUnit'
        description: The persistent grant idle timeout time unit.
        enum:
          - MINUTES
          - DAYS
          - HOURS
      persistentGrantLifetime:
        description: The persistent grant lifetime. The default value is indefinite.
        format: int64
        type: integer
      persistentGrantLifetimeUnit:
        $ref: '#/definitions/PersistentGrantLifetimeUnit'
        description: The persistent grant lifetime unit.
        enum:
          - MINUTES
          - DAYS
          - HOURS
      persistentGrantReuseGrantTypes:
        description: >-
          The grant types that the OAuth AS can reuse rather than creating a new
          grant for each request.
        items:
          $ref: '#/definitions/GrantType'
          enum:
            - IMPLICIT
            - AUTHORIZATION_CODE
            - RESOURCE_OWNER_CREDENTIALS
            - CLIENT_CREDENTIALS
            - REFRESH_TOKEN
            - EXTENSION
            - DEVICE_CODE
            - ACCESS_TOKEN_VALIDATION
            - CIBA
            - TOKEN_EXCHANGE
        type: array
      refreshRollingInterval:
        description: 'The minimum interval to roll refresh tokens, in hours.'
        format: int64
        type: integer
      refreshTokenLength:
        description: The refresh token length in number of characters.
        format: int32
        type: integer
      registeredAuthorizationPath:
        description: >-
          The Registered Authorization Path is concatenated to PingFederate base
          URL to generate 'verification_url' and 'verification_url_complete'
          values in a Device Authorization request. PingFederate listens to this
          path if specified
        type: string
      rollRefreshTokenValues:
        description: >-
          The roll refresh token values default policy. The default value is
          true.
        type: boolean
      scopeForOAuthGrantManagement:
        description: The OAuth scope to validate when accessing grant management service.
        type: string
      scopeGroups:
        description: The list of common scope groups.
        items:
          $ref: '#/definitions/ScopeGroupEntry'
        type: array
      scopes:
        description: The list of common scopes.
        items:
          $ref: '#/definitions/ScopeEntry'
        type: array
      tokenEndpointBaseUrl:
        description: >-
          The token endpoint base URL used to validate the 'aud' claim during
          Private Key JWT Client Authentication.
        type: string
      trackUserSessionsForLogout:
        description: >-
          Determines whether user sessions are tracked for logout. If this
          property is not provided on a PUT, the setting is left unchanged.
        type: boolean
      userAuthorizationConsentAdapter:
        description: >-
          Adapter ID of the external consent adapter to be used for the consent
          page user interface.
        type: string
      userAuthorizationConsentPageSetting:
        $ref: '#/definitions/UserAuthorizationConsentPageSetting'
        description: >-
          User Authorization Consent Page setting to use PingFederate's internal
          consent page or an external system
        enum:
          - INTERNAL
          - ADAPTER
      userAuthorizationUrl:
        description: >-
          The URL used to generate 'verification_url' and
          'verification_url_complete' values in a Device Authorization request
        type: string
    required:
      - defaultScopeDescription
      - authorizationCodeTimeout
      - authorizationCodeEntropy
      - refreshTokenLength
      - refreshRollingInterval
      - registeredAuthorizationPath
      - pendingAuthorizationTimeout
      - devicePollingInterval
      - bypassActivationCodeConfirmation
  PersistentGrantAttribute:
    description: A persistent grant contract attribute.
    properties:
      name:
        description: The name of this attribute.
        type: string
    required:
      - name
  PersistentGrantContract:
    properties:
      coreAttributes:
        description: >-
          This is a read-only list of persistent grant attributes and includes
          USER_KEY and USER_NAME. Changes to this field will be ignored.
        items:
          $ref: '#/definitions/PersistentGrantAttribute'
        type: array
      extendedAttributes:
        description: A list of additional attributes for the persistent grant contract.
        items:
          $ref: '#/definitions/PersistentGrantAttribute'
        type: array
    required:
      - coreAttributes
  ResourceLink:
    description: A reference to a resource.
    properties:
      id:
        description: The ID of the resource.
        type: string
      location:
        description: >-
          A read-only URL that references the resource. If the resource is not
          currently URL-accessible, this property will be null.
        type: string
    required:
      - id
  ScopeEntry:
    description: A scope name and its description.
    properties:
      description:
        description: >-
          The description of the scope that appears when the user is prompted
          for authorization.
        type: string
      dynamic:
        description: True if the scope is dynamic. (Defaults to false)
        type: boolean
      name:
        description: The name of the scope.
        type: string
    required:
      - name
      - description
  ScopeGroupEntry:
    description: A scope group name and its description.
    properties:
      description:
        description: The description of the scope group.
        type: string
      name:
        description: The name of the scope group.
        type: string
      scopes:
        description: The set of scopes for this scope group.
        items:
          type: string
        type: array
        uniqueItems: true
    required:
      - name
      - description
      - scopes
  ValidationError:
    description: A data input validation error.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      errorId:
        description: Error identifier.
        type: string
      fieldPath:
        description: 'The path to the model field to which the error relates, if one exists.'
        type: string
      message:
        description: User-friendly error description.
        type: string
host: 'ip-10-101-29-72:9999'
info:
  title: 'ip-10-101-29-72:9999'
  version: v1
paths:
  /oauth/authServerSettings:
    get:
      operationId: getAuthorizationServerSettings
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AuthorizationServerSettings'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
      summary: Get the Authorization Server Settings.
    put:
      consumes:
        - application/json
      operationId: updateAuthorizationServerSettings
      parameters:
        - description: Configuration for updated server settings.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServerSettings'
      produces:
        - application/json
      responses:
        '200':
          description: Authorization Server Settings updated.
          schema:
            $ref: '#/definitions/AuthorizationServerSettings'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update the Authorization Server Settings.
  /oauth/authServerSettings/scopes/commonScopeGroups:
    post:
      consumes:
        - application/json
      operationId: addCommonScopeGroup
      parameters:
        - description: The scope group definition
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
        '201':
          description: Common Scope Group created.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Create a new common scope group.
  '/oauth/authServerSettings/scopes/commonScopeGroups/{name}':
    delete:
      operationId: removeCommonScopeGroup
      parameters:
        - description: Name of the common scope group.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Common Scope Group deleted.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Remove an existing common scope group.
    get:
      consumes:
        - application/json
      operationId: getCommonScopeGroup
      parameters:
        - description: Name of the common scope group.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
      summary: Get an existing common scope group.
    put:
      consumes:
        - application/json
      operationId: updateCommonScopeGroup
      parameters:
        - description: Name of the common scope group.
          in: path
          name: name
          required: true
          type: string
        - description: The scope group definition.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
      produces:
        - application/json
      responses:
        '200':
          description: Common Scope Group updated.
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update an existing common scope group.
  /oauth/authServerSettings/scopes/commonScopes:
    post:
      consumes:
        - application/json
      operationId: addCommonScope
      parameters:
        - description: The scope definition.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeEntry'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ScopeEntry'
        '201':
          description: Common Scope added.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Add a new common scope.
  '/oauth/authServerSettings/scopes/commonScopes/{name}':
    delete:
      operationId: removeCommonScope
      parameters:
        - description: Name of the common scope.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Common Scope deleted.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Remove an existing common scope.
    get:
      consumes:
        - application/json
      operationId: getCommonScope
      parameters:
        - description: Name of the common scope.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ScopeEntry'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
      summary: Get an existing common scope.
    put:
      consumes:
        - application/json
      operationId: updateCommonScope
      parameters:
        - description: Name of the common scope.
          in: path
          name: name
          required: true
          type: string
        - description: The scope definition
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeEntry'
      produces:
        - application/json
      responses:
        '200':
          description: Common Scope updated.
          schema:
            $ref: '#/definitions/ScopeEntry'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update an existing common scope.
  /oauth/authServerSettings/scopes/exclusiveScopeGroups:
    post:
      consumes:
        - application/json
      operationId: addExclusiveScopeGroup
      parameters:
        - description: The scope group definition
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
        '201':
          description: Exclusive Scope Group created.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Create a new exclusive scope group.
  '/oauth/authServerSettings/scopes/exclusiveScopeGroups/{name}':
    delete:
      operationId: removeExclusiveScopeGroup
      parameters:
        - description: Name of the exclusive scope group.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Exclusive Scope Group deleted.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Remove an existing exclusive scope group.
    get:
      consumes:
        - application/json
      operationId: getExclusiveScopeGroup
      parameters:
        - description: Name of the exclusive scope group.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
      summary: Get an existing exclusive scope group.
    put:
      consumes:
        - application/json
      operationId: updateExclusiveScopeGroups
      parameters:
        - description: Name of the exclusive scope group.
          in: path
          name: name
          required: true
          type: string
        - description: The scope group definition
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
      produces:
        - application/json
      responses:
        '200':
          description: Exclusive Scope Group updated.
          schema:
            $ref: '#/definitions/ScopeGroupEntry'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update an existing exclusive scope group.
  /oauth/authServerSettings/scopes/exclusiveScopes:
    post:
      consumes:
        - application/json
      operationId: addExclusiveScope
      parameters:
        - description: A new exclusive scope
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeEntry'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ScopeEntry'
        '201':
          description: Exclusive Scope added.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Add a new exclusive scope.
  '/oauth/authServerSettings/scopes/exclusiveScopes/{name}':
    delete:
      operationId: removeExclusiveScope
      parameters:
        - description: Name of the exclusive scope.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Exclusive Scope deleted.
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
      summary: Remove an existing exclusive scope.
    get:
      consumes:
        - application/json
      operationId: getExclusiveScope
      parameters:
        - description: Name of the exclusive scope.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ScopeEntry'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
      summary: Get an existing exclusive scope.
    put:
      consumes:
        - application/json
      operationId: updateExclusiveScope
      parameters:
        - description: Name of the exclusive scope.
          in: path
          name: name
          required: true
          type: string
        - description: The scope definition.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScopeEntry'
      produces:
        - application/json
      responses:
        '200':
          description: Exclusive Scope updated.
          schema:
            $ref: '#/definitions/ScopeEntry'
        '403':
          description: >-
            PingFederate does not have its OAuth 2.0 authorization server role
            enabled. Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update an existing exclusive scope.
schemes:
  - https
swagger: '2.0'

