basePath: /pf-admin-api/v1
definitions:
  ApiResult:
    description: Details on the result of the operation.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      message:
        description: Success or error message.
        type: string
      resultId:
        description: Result identifier.
        type: string
      validationErrors:
        description: 'List of validation errors, if any.'
        items:
          $ref: '#/definitions/ValidationError'
        type: array
  AttributeFulfillmentValue:
    description: Defines how an attribute in an attribute contract should be populated.
    properties:
      source:
        $ref: '#/definitions/SourceTypeIdKey'
        description: The attribute value source.
      value:
        description: The value for this attribute.
        type: string
    required:
      - source
      - value
  AttributeSource:
    description: >-
      The configured settings to look up attributes from an associated data
      store.
    discriminator: type
    properties:
      attributeContractFulfillment:
        additionalProperties:
          $ref: '#/definitions/AttributeFulfillmentValue'
        description: >-
          A list of mappings from attribute names to their fulfillment values.
          This field is only valid for the SP Connection's Browser SSO mappings
      dataStoreRef:
        $ref: '#/definitions/ResourceLink'
        description: Reference to the associated data store.
      description:
        description: >-
          The description of this attribute source. The description needs to be
          unique amongst the attribute sources for the mapping.<br>Note:
          Required for APC-to-SP Adapter Mappings
        type: string
      id:
        description: >-
          The ID that defines this attribute source. Only alphanumeric
          characters allowed.<br>Note: Required for OpenID Connect policy
          attribute sources, OAuth IdP adapter mappings, OAuth access token
          mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore
          this property since it only allows one attribute source to be defined
          per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute
          sources.
        type: string
      type:
        $ref: '#/definitions/DataStoreType'
        description: The data store type of this attribute source.
        enum:
          - LDAP
          - JDBC
          - CUSTOM
    required:
      - type
      - dataStoreRef
  BinaryLdapAttributeSettings:
    description: Binary settings for a LDAP attribute.
    properties:
      binaryEncoding:
        $ref: '#/definitions/LdapAttrEncodingType'
        description: >-
          Get the encoding type for this attribute. If not specified, the
          default is BASE64.
        enum:
          - BASE64
          - HEX
          - SID
  ConditionalIssuanceCriteriaEntry:
    description: >-
      An issuance criterion that checks a source attribute against a particular
      condition and the expected value. If the condition is true then this
      issuance criterion passes, otherwise the criterion fails.
    properties:
      attributeName:
        description: The name of the attribute to use in this issuance criterion.
        type: string
      condition:
        $ref: '#/definitions/ConditionType'
        description: >-
          The condition that will be applied to the source attribute's value and
          the expected value.
        enum:
          - EQUALS
          - EQUALS_CASE_INSENSITIVE
          - EQUALS_DN
          - NOT_EQUAL
          - NOT_EQUAL_CASE_INSENSITIVE
          - NOT_EQUAL_DN
          - MULTIVALUE_CONTAINS
          - MULTIVALUE_CONTAINS_CASE_INSENSITIVE
          - MULTIVALUE_CONTAINS_DN
          - MULTIVALUE_DOES_NOT_CONTAIN
          - MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE
          - MULTIVALUE_DOES_NOT_CONTAIN_DN
      errorResult:
        description: >-
          The error result to return if this issuance criterion fails. This
          error result will show up in the PingFederate server logs.
        type: string
      source:
        $ref: '#/definitions/SourceTypeIdKey'
        description: The source of the attribute.
      value:
        description: The expected value of this issuance criterion.
        type: string
    required:
      - source
      - attributeName
      - condition
      - value
  CustomAttributeSource:
    allOf:
      - description: >-
          The configured settings used to look up attributes from a custom data
          store.
        properties:
          attributeContractFulfillment:
            additionalProperties:
              $ref: '#/definitions/AttributeFulfillmentValue'
            description: >-
              A list of mappings from attribute names to their fulfillment
              values. This field is only valid for the SP Connection's Browser
              SSO mappings
          dataStoreRef:
            $ref: '#/definitions/ResourceLink'
            description: Reference to the associated data store.
          description:
            description: >-
              The description of this attribute source. The description needs to
              be unique amongst the attribute sources for the mapping.<br>Note:
              Required for APC-to-SP Adapter Mappings
            type: string
          filterFields:
            description: >-
              The list of fields that can be used to filter a request to the
              custom data store.
            items:
              $ref: '#/definitions/FieldEntry'
            type: array
          id:
            description: >-
              The ID that defines this attribute source. Only alphanumeric
              characters allowed.<br>Note: Required for OpenID Connect policy
              attribute sources, OAuth IdP adapter mappings, OAuth access token
              mappings and APC-to-SP Adapter Mappings. IdP Connections will
              ignore this property since it only allows one attribute source to
              be defined per mapping. IdP-to-SP Adapter Mappings can contain
              multiple attribute sources.
            type: string
          type:
            $ref: '#/definitions/DataStoreType'
            description: The data store type of this attribute source.
            enum:
              - LDAP
              - JDBC
              - CUSTOM
        required:
          - type
          - dataStoreRef
      - $ref: '#/definitions/AttributeSource'
  ExpressionIssuanceCriteriaEntry:
    description: >-
      An issuance criterion that uses a Boolean return value from an OGNL
      expression to determine whether or not it passes.
    properties:
      errorResult:
        description: >-
          The error result to return if this issuance criterion fails. This
          error result will show up in the PingFederate server logs.
        type: string
      expression:
        description: The OGNL expression to evaluate.
        type: string
    required:
      - expression
  FieldEntry:
    description: A simple name value pair to represent a field entry.
    properties:
      name:
        description: The name of this field.
        type: string
      value:
        description: >-
          The value of this field. Whether or not the value is required will be
          determined by plugin validation checks.
        type: string
    required:
      - name
  IssuanceCriteria:
    description: >-
      A list of criteria that determines whether a transaction (usually a SSO
      transaction) is continued. All criteria must pass in order for the
      transaction to continue.
    properties:
      conditionalCriteria:
        description: >-
          A list of conditional issuance criteria where existing attributes must
          satisfy their conditions against expected values in order for the
          transaction to continue.
        items:
          $ref: '#/definitions/ConditionalIssuanceCriteriaEntry'
        type: array
      expressionCriteria:
        description: >-
          A list of expression issuance criteria where the OGNL expressions must
          evaluate to true in order for the transaction to continue.
        items:
          $ref: '#/definitions/ExpressionIssuanceCriteriaEntry'
        type: array
  JdbcAttributeSource:
    allOf:
      - description: >-
          The configured settings used to look up attributes from a JDBC data
          store.
        properties:
          attributeContractFulfillment:
            additionalProperties:
              $ref: '#/definitions/AttributeFulfillmentValue'
            description: >-
              A list of mappings from attribute names to their fulfillment
              values. This field is only valid for the SP Connection's Browser
              SSO mappings
          dataStoreRef:
            $ref: '#/definitions/ResourceLink'
            description: Reference to the associated data store.
          description:
            description: >-
              The description of this attribute source. The description needs to
              be unique amongst the attribute sources for the mapping.<br>Note:
              Required for APC-to-SP Adapter Mappings
            type: string
          filter:
            description: >-
              The JDBC WHERE clause used to query your data store to locate a
              user record.
            type: string
          id:
            description: >-
              The ID that defines this attribute source. Only alphanumeric
              characters allowed.<br>Note: Required for OpenID Connect policy
              attribute sources, OAuth IdP adapter mappings, OAuth access token
              mappings and APC-to-SP Adapter Mappings. IdP Connections will
              ignore this property since it only allows one attribute source to
              be defined per mapping. IdP-to-SP Adapter Mappings can contain
              multiple attribute sources.
            type: string
          schema:
            description: >-
              Lists the table structure that stores information within a
              database. Some databases, such as Oracle, require a schema for a
              JDBC query. Other databases, such as MySQL, do not require a
              schema.
            type: string
          table:
            description: >-
              The name of the database table. The name is used to construct the
              SQL query to retrieve data from the data store.
            type: string
          type:
            $ref: '#/definitions/DataStoreType'
            description: The data store type of this attribute source.
            enum:
              - LDAP
              - JDBC
              - CUSTOM
        required:
          - type
          - dataStoreRef
          - table
          - filter
      - $ref: '#/definitions/AttributeSource'
  LdapAttributeSource:
    allOf:
      - description: >-
          The configured settings used to look up attributes from a LDAP data
          store.
        properties:
          attributeContractFulfillment:
            additionalProperties:
              $ref: '#/definitions/AttributeFulfillmentValue'
            description: >-
              A list of mappings from attribute names to their fulfillment
              values. This field is only valid for the SP Connection's Browser
              SSO mappings
          baseDn:
            description: >-
              The base DN to search from. If not specified, the search will
              start at the LDAP's root.
            type: string
          binaryAttributeSettings:
            additionalProperties:
              $ref: '#/definitions/BinaryLdapAttributeSettings'
            description: The advanced settings for binary LDAP attributes.
          dataStoreRef:
            $ref: '#/definitions/ResourceLink'
            description: Reference to the associated data store.
          description:
            description: >-
              The description of this attribute source. The description needs to
              be unique amongst the attribute sources for the mapping.<br>Note:
              Required for APC-to-SP Adapter Mappings
            type: string
          id:
            description: >-
              The ID that defines this attribute source. Only alphanumeric
              characters allowed.<br>Note: Required for OpenID Connect policy
              attribute sources, OAuth IdP adapter mappings, OAuth access token
              mappings and APC-to-SP Adapter Mappings. IdP Connections will
              ignore this property since it only allows one attribute source to
              be defined per mapping. IdP-to-SP Adapter Mappings can contain
              multiple attribute sources.
            type: string
          memberOfNestedGroup:
            description: >-
              Set this to true to return transitive group memberships for the
              'memberOf' attribute.  This only applies for Active Directory data
              sources.  All other data sources will be set to false.
            type: boolean
          searchFilter:
            description: >-
              The LDAP filter that will be used to lookup the objects from the
              directory.
            type: string
          searchScope:
            $ref: '#/definitions/LdapSearchScope'
            description: Determines the node depth of the query.
            enum:
              - OBJECT
              - ONE_LEVEL
              - SUBTREE
          type:
            $ref: '#/definitions/DataStoreType'
            description: The data store type of this attribute source.
            enum:
              - LDAP
              - JDBC
              - CUSTOM
        required:
          - type
          - dataStoreRef
          - searchScope
          - searchFilter
      - $ref: '#/definitions/AttributeSource'
  ResourceLink:
    description: A reference to a resource.
    properties:
      id:
        description: The ID of the resource.
        type: string
      location:
        description: >-
          A read-only URL that references the resource. If the resource is not
          currently URL-accessible, this property will be null.
        type: string
    required:
      - id
  SourceTypeIdKey:
    description: >-
      A key that is meant to reference a source from which an attribute can be
      retrieved. This model is usually paired with a value which, depending on
      the SourceType, can be a hardcoded value or a reference to an attribute
      name specific to that SourceType. Not all values are applicable - a
      validation error will be returned for incorrect values.<br>For each
      SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was
      enabled for the browser SSO, the value must be 'Local User ID', unless it
      has been overridden in PingFederate's server configuration.<br>ADAPTER -
      The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The
      value is one of the attributes coming from the SAML
      assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the
      attributes coming from an authentication policy
      contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields
      coming from a local identity profile.<br>CONTEXT - The value must be one
      of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or
      'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or
      'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or
      'VirtualServerId' or 'AuthenticatingAuthority' or
      'DefaultPersistentGrantLifetime']<br>CLAIMS - Attributes provided by the
      OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes
      returned by this custom data store.<br>EXPRESSION - The value is an OGNL
      expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth
      extended client metadata parameter. This source type is deprecated and has
      been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value
      is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value
      is one of the attributes passed in by the IdP
      connection.<br>JDBC_DATA_STORE - The value is one of the column names
      returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is
      one of the LDAP attributes supported by your LDAP data
      store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped
      attributes that is defined in the associated attribute
      mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes
      from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is
      one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to
      indicate that an attribute currently has no mapped source.TEXT - A
      hardcoded value that is used to populate the corresponding
      attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST
      - The value is from the request context such as the CIBA identity hint
      contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS -
      The value is from the original request parameters.<br>SUBJECT_TOKEN - The
      value is one of the OAuth 2.0 Token exchange subject_token
      attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token
      exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The
      value is one of the attributes coming from a Token Exchange Processor
      policy.
    properties:
      id:
        description: >-
          The attribute source ID that refers to the attribute source that this
          key references. In some resources, the ID is optional and will be
          ignored. In these cases the ID should be omitted. If the source type
          is not an attribute source then the ID can be omitted.
        type: string
      type:
        $ref: '#/definitions/SourceType'
        description: The source type of this key.
        enum:
          - TOKEN_EXCHANGE_PROCESSOR_POLICY
          - ACCOUNT_LINK
          - ADAPTER
          - ASSERTION
          - CONTEXT
          - CUSTOM_DATA_STORE
          - EXPRESSION
          - JDBC_DATA_STORE
          - LDAP_DATA_STORE
          - MAPPED_ATTRIBUTES
          - NO_MAPPING
          - TEXT
          - TOKEN
          - REQUEST
          - OAUTH_PERSISTENT_GRANT
          - SUBJECT_TOKEN
          - ACTOR_TOKEN
          - PASSWORD_CREDENTIAL_VALIDATOR
          - IDP_CONNECTION
          - AUTHENTICATION_POLICY_CONTRACT
          - CLAIMS
          - LOCAL_IDENTITY_PROFILE
          - EXTENDED_CLIENT_METADATA
          - EXTENDED_PROPERTIES
          - TRACKED_HTTP_PARAMS
    required:
      - type
  TokenExchangeProcessorAttribute:
    description: >-
      An attribute for the OAuth 2.0 Token Exchange Processor policy attribute
      contract.
    properties:
      name:
        description: The name of this attribute.
        type: string
    required:
      - name
  TokenExchangeProcessorAttributeContract:
    description: >-
      A set of attributes exposed by an OAuth 2.0 Token Exchange Processor
      policy.
    properties:
      coreAttributes:
        description: >-
          A list of read-only attributes (for example, subject) that are
          automatically populated by PingFederate.
        items:
          $ref: '#/definitions/TokenExchangeProcessorAttribute'
        type: array
      extendedAttributes:
        description: A list of additional attributes.
        items:
          $ref: '#/definitions/TokenExchangeProcessorAttribute'
        type: array
  TokenExchangeProcessorMapping:
    description: >-
      A Token Processor(s) mapping into an OAuth 2.0 Token Exchange Processor
      policy.
    properties:
      actorTokenProcessor:
        $ref: '#/definitions/ResourceLink'
        description: The Token processor used to process the actor token
      actorTokenType:
        description: The Actor token type
        type: string
      attributeContractFulfillment:
        additionalProperties:
          $ref: '#/definitions/AttributeFulfillmentValue'
        description: A list of mappings from attribute names to their fulfillment values.
      attributeSources:
        description: A list of configured data stores to look up attributes from.
        items:
          $ref: '#/definitions/AttributeSource'
        type: array
      issuanceCriteria:
        $ref: '#/definitions/IssuanceCriteria'
        description: >-
          The issuance criteria that this transaction must meet before the
          corresponding attribute contract is fulfilled.
      subjectTokenProcessor:
        $ref: '#/definitions/ResourceLink'
        description: The Token processor used to process the subject token
      subjectTokenType:
        description: The Subject token type
        type: string
    required:
      - attributeContractFulfillment
      - subjectTokenType
      - subjectTokenProcessor
  TokenExchangeProcessorPolicies:
    description: A collection of OAuth 2.0 Token Exchange Processor policies.
    properties:
      items:
        description: The list of OAuth 2.0 Token Exchange Processor policies.
        items:
          $ref: '#/definitions/TokenExchangeProcessorPolicy'
        type: array
  TokenExchangeProcessorPolicy:
    description: >-
      The set of attributes used to configure a OAuth 2.0 Token Exchange
      processor policy.
    properties:
      actorTokenRequired:
        description: Require an Actor token on a OAuth 2.0 Token Exchange request.
        type: boolean
      attributeContract:
        $ref: '#/definitions/TokenExchangeProcessorAttributeContract'
        description: >-
          A set of attributes exposed by an OAuth 2.0 Token Exchange Processor
          policy.
      id:
        description: The Token Exchange processor policy ID. ID is unique.
        type: string
      name:
        description: The Token Exchange processor policy name. Name is unique.
        type: string
      processorMappings:
        description: >-
          A list of Token Processor(s) mappings into an OAuth 2.0 Token Exchange
          Processor policy.
        items:
          $ref: '#/definitions/TokenExchangeProcessorMapping'
        type: array
    required:
      - id
      - name
      - processorMappings
      - attributeContract
  TokenExchangeProcessorSettings:
    description: Settings for the OAuth Token Exchange Processor Policy configuration.
    properties:
      defaultProcessorPolicyRef:
        $ref: '#/definitions/ResourceLink'
        description: >-
          Reference to the default Token Exchange Processor policy, if one is
          defined.
  ValidationError:
    description: A data input validation error.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      errorId:
        description: Error identifier.
        type: string
      fieldPath:
        description: 'The path to the model field to which the error relates, if one exists.'
        type: string
      message:
        description: User-friendly error description.
        type: string
host: 'ip-10-101-29-72:9999'
info:
  title: 'ip-10-101-29-72:9999'
  version: v1
paths:
  /oauth/tokenExchange/processor/policies:
    get:
      operationId: getPolicies
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/TokenExchangeProcessorPolicies'
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
      summary: Get list of OAuth 2.0 Token Exchange Processor policies.
    post:
      consumes:
        - application/json
      description: >-
        Create a new OAuth 2.0 Token Exchange Processor policy. If the OAuth 2.0
        Token Exchange Processor policy is not properly configured, a 422 status
        code is returned along with a list of validation errors that must be
        corrected.
      operationId: createPolicy
      parameters:
        - description: Configuration for new OAuth 2.0 Token Exchange Processor.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TokenExchangeProcessorPolicy'
        - description: >-
            External validation will be bypassed when set to true. Default to
            false.
          in: header
          name: bypassExternalValidation
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TokenExchangeProcessorPolicy'
        '201':
          description: Token Exchange Processor Policy created.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Create a new OAuth 2.0 Token Exchange Processor policy.
  '/oauth/tokenExchange/processor/policies/{id}':
    delete:
      description: >-
        Delete an OAuth 2.0 Token Exchange Processor policy with the specified
        ID. A 404 status code is returned for nonexistent IDs. Note: If the
        request succeeds, the response body is empty. If the request fails, an
        ApiResult is returned with details of the error.
      operationId: deletePolicy
      parameters:
        - description: ID of OAuth 2.0 Token Exchange Processor policy to delete.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Token Exchange Processor Policy deleted.
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
        '404':
          description: Resource not found.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Delete an OAuth 2.0 Token Exchange Processor policy.
    get:
      description: >-
        Get an OAuth 2.0 Token Exchange Processor policy with the specified ID.
        A 404 status code is returned for nonexistent IDs.
      operationId: getPolicy
      parameters:
        - description: ID of the OAuth 2.0 Token Exchange Processor policy to fetch.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/TokenExchangeProcessorPolicy'
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Find an OAuth 2.0 Token Exchange Processor policy by ID.
    put:
      consumes:
        - application/json
      description: >-
        Update an OAuth 2.0 Token Exchange Processor policy with the matching
        ID. If the policy is not properly configured, a 422 status code is
        returned along with a list of validation errors that must be corrected.
        Note: A 404 status code is returned for nonexistent IDs.
      operationId: updatePolicy
      parameters:
        - description: ID of the OAuth 2.0 Token Exchange Processor policy to update.
          in: path
          name: id
          required: true
          type: string
        - description: Configuration for updated OAuth 2.0 Token Exchange Processor policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TokenExchangeProcessorPolicy'
        - description: >-
            External validation will be bypassed when set to true. Default to
            false.
          in: header
          name: bypassExternalValidation
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Token Exchange Processor Policy updated.
          schema:
            $ref: '#/definitions/TokenExchangeProcessorPolicy'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update an OAuth 2.0 Token Exchange Processor policy.
  /oauth/tokenExchange/processor/settings:
    get:
      operationId: getSettings
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/TokenExchangeProcessorSettings'
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
      summary: Get general OAuth 2.0 Token Exchange Processor settings.
    put:
      consumes:
        - application/json
      operationId: updateSettings
      parameters:
        - description: OAuth 2.0 Token Exchange Processor settings.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TokenExchangeProcessorSettings'
        - description: >-
            External validation will be bypassed when set to true. Default to
            false.
          in: header
          name: bypassExternalValidation
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Settings updated.
          schema:
            $ref: '#/definitions/TokenExchangeProcessorSettings'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the IdP and OAuth roles enabled.
            Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update general OAuth 2.0 Token Exchange Processor settings.
schemes:
  - https
swagger: '2.0'

