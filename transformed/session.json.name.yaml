basePath: /pf-admin-api/v1
definitions:
  ApiResult:
    description: Details on the result of the operation.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      message:
        description: Success or error message.
        type: string
      resultId:
        description: Result identifier.
        type: string
      validationErrors:
        description: 'List of validation errors, if any.'
        items:
          $ref: '#/definitions/ValidationError'
        type: array
  ApplicationSessionPolicy:
    description: >-
      Session controls for user facing PingFederate application endpoints, such
      as the profile management endpoint.
    properties:
      idleTimeoutMins:
        description: >-
          The idle timeout period, in minutes. If set to -1, the idle timeout
          will be set to the maximum timeout. The default is 60.
        format: int32
        type: integer
      maxTimeoutMins:
        description: >-
          The maximum timeout period, in minutes. If set to -1, sessions do not
          expire. The default is 480.
        format: int32
        type: integer
  AuthenticationSessionPolicies:
    description: A collection of authentication session policies.
    properties:
      items:
        description: The actual list of policies.
        items:
          $ref: '#/definitions/AuthenticationSessionPolicy'
        type: array
  AuthenticationSessionPolicy:
    description: The session policy for a specified authentication source.
    properties:
      authenticationSource:
        $ref: '#/definitions/AuthenticationSource'
        description: >-
          The authentication source this session policy applies to. This
          property cannot be changed after the policy is created.
      authnContextSensitive:
        description: >-
          Determines whether the requested authentication context is considered
          when deciding whether an existing session is valid for a given
          request. The default is false.
        type: boolean
      enableSessions:
        description: >-
          Determines whether sessions are enabled for the authentication source.
          This value overrides the enableSessions value from the global
          authentication session policy.
        type: boolean
      id:
        description: >-
          The persistent, unique ID for the session policy. It can be any
          combination of [a-z0-9._-]. This property is system-assigned if not
          specified.
        type: string
      idleTimeoutMins:
        description: >-
          The idle timeout period, in minutes. If omitted, the value from the
          global authentication session policy will be used. If set to -1, the
          idle timeout will be set to the maximum timeout. If a value is
          provided for this property, a value must also be provided for
          maxTimeoutMins.
        format: int32
        type: integer
      maxTimeoutMins:
        description: >-
          The maximum timeout period, in minutes. If omitted, the value from the
          global authentication session policy will be used. If set to -1,
          sessions do not expire. If a value is provided for this property, a
          value must also be provided for idleTimeoutMins.
        format: int32
        type: integer
      persistent:
        description: >-
          Determines whether sessions for the authentication source are
          persistent. This value overrides the persistentSessions value from the
          global authentication session policy. This field is ignored if
          enableSessions is false.
        type: boolean
      timeoutDisplayUnit:
        $ref: '#/definitions/SessionTimeUnit'
        description: >-
          The display unit for session timeout periods in the PingFederate
          administrative console. When the display unit is HOURS or DAYS, the
          timeout values in minutes must correspond to a whole number value for
          the specified unit.
        enum:
          - MINUTES
          - HOURS
          - DAYS
    required:
      - authenticationSource
      - enableSessions
  AuthenticationSource:
    description: An authentication source (IdP adapter or IdP connection).
    properties:
      sourceRef:
        $ref: '#/definitions/ResourceLink'
        description: A reference to the authentication source.
      type:
        $ref: '#/definitions/AuthenticationSourceType'
        description: The type of this authentication source.
        enum:
          - IDP_ADAPTER
          - IDP_CONNECTION
    required:
      - type
      - sourceRef
  GlobalAuthenticationSessionPolicy:
    description: The global policy for authentication sessions.
    properties:
      enableSessions:
        description: Determines whether authentication sessions are enabled globally.
        type: boolean
      idleTimeoutDisplayUnit:
        $ref: '#/definitions/SessionTimeUnit'
        description: >-
          The display unit for the idle timeout period in the PingFederate
          administrative console. When the display unit is HOURS or DAYS, the
          timeout value in minutes must correspond to a whole number value for
          the specified unit.
        enum:
          - MINUTES
          - HOURS
          - DAYS
      idleTimeoutMins:
        description: >-
          The idle timeout period, in minutes. If set to -1, the idle timeout
          will be set to the maximum timeout. The default is 60.
        format: int32
        type: integer
      maxTimeoutDisplayUnit:
        $ref: '#/definitions/SessionTimeUnit'
        description: >-
          The display unit for the maximum timeout period in the PingFederate
          administrative console. When the display unit is HOURS or DAYS, the
          timeout value in minutes must correspond to a whole number value for
          the specified unit.
        enum:
          - MINUTES
          - HOURS
          - DAYS
      maxTimeoutMins:
        description: >-
          The maximum timeout period, in minutes. If set to -1, sessions do not
          expire. The default is 480.
        format: int32
        type: integer
      persistentSessions:
        description: >-
          Determines whether authentication sessions are persistent by default.
          Persistent sessions are linked to a persistent cookie and stored in a
          data store. This field is ignored if enableSessions is false.
        type: boolean
    required:
      - enableSessions
  ResourceLink:
    description: A reference to a resource.
    properties:
      id:
        description: The ID of the resource.
        type: string
      location:
        description: >-
          A read-only URL that references the resource. If the resource is not
          currently URL-accessible, this property will be null.
        type: string
    required:
      - id
  SessionSettings:
    description: General settings related to session management.
    properties:
      revokeUserSessionOnLogout:
        description: >-
          Determines whether the user's session is revoked on logout. If this
          property is not provided on a PUT, the setting is left unchanged.
        type: boolean
      sessionRevocationLifetime:
        description: >-
          How long a session revocation is tracked and stored, in minutes. If
          this property is not provided on a PUT, the setting is left unchanged.
        format: int32
        type: integer
      trackAdapterSessionsForLogout:
        description: >-
          Determines whether adapter sessions are tracked for cleanup during
          single logout. The default is false.
        type: boolean
  ValidationError:
    description: A data input validation error.
    properties:
      developerMessage:
        description: 'Developer-oriented error message, if available.'
        type: string
      errorId:
        description: Error identifier.
        type: string
      fieldPath:
        description: 'The path to the model field to which the error relates, if one exists.'
        type: string
      message:
        description: User-friendly error description.
        type: string
host: 'ip-10-101-29-72:9999'
info:
  title: 'ip-10-101-29-72:9999'
  version: v1
paths:
  /session/applicationSessionPolicy:
    get:
      operationId: getApplicationPolicy
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ApplicationSessionPolicy'
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
      summary: Get the application session policy.
    put:
      consumes:
        - application/json
      operationId: updateApplicationPolicy
      parameters:
        - description: Application session policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApplicationSessionPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: Application session policy updated.
          schema:
            $ref: '#/definitions/ApplicationSessionPolicy'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update the application session policy.
  /session/authenticationSessionPolicies:
    get:
      description: >-
        Get a list of all session policies that are associated with specific
        authentication sources.
      operationId: getSourcePolicies
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AuthenticationSessionPolicies'
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
      summary: Get list of session policies.
    post:
      consumes:
        - application/json
      description: >-
        Create a new session policy for a specified authentication source. If
        the session policy is not properly configured, a 422 status code is
        returned along with a list of validation errors that must be corrected.
      operationId: createSourcePolicy
      parameters:
        - description: Configuration for new policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationSessionPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AuthenticationSessionPolicy'
        '201':
          description: Authentication session policy created.
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Create a new session policy.
  /session/authenticationSessionPolicies/global:
    get:
      operationId: getGlobalPolicy
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/GlobalAuthenticationSessionPolicy'
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
      summary: Get the global authentication session policy.
    put:
      consumes:
        - application/json
      operationId: updateGlobalPolicy
      parameters:
        - description: Global authentication session policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GlobalAuthenticationSessionPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: Global authentication session policy updated.
          schema:
            $ref: '#/definitions/GlobalAuthenticationSessionPolicy'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update the global authentication session policy.
  '/session/authenticationSessionPolicies/{id}':
    delete:
      description: >-
        Delete the session policy with the specified ID. A 404 status code is
        returned for nonexistent IDs. If the request succeeds, the response body
        is empty. If the request fails, an ApiResult is returned with details of
        the error.
      operationId: deleteSourcePolicy
      parameters:
        - description: ID of session policy to delete.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResult'
        '204':
          description: Authentication session policy deleted.
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '404':
          description: Resource not found.
      summary: Delete a session policy.
    get:
      description: >-
        Get the session policy with the specified ID. A 404 status code is
        returned for nonexistent IDs.
      operationId: getSourcePolicy
      parameters:
        - description: ID of the session policy to fetch.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AuthenticationSessionPolicy'
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Find session policy by ID.
    put:
      consumes:
        - application/json
      description: >-
        Update the session policy with the matching ID. If the policy is not
        properly configured, a 422 status code is returned along with a list of
        validation errors that must be corrected.
      operationId: updateSourcePolicy
      parameters:
        - description: ID of the session policy to update.
          in: path
          name: id
          required: true
          type: string
        - description: Configuration for updated policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationSessionPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: Authentication session policy updated.
          schema:
            $ref: '#/definitions/AuthenticationSessionPolicy'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiResult'
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update a session policy.
  /session/settings:
    get:
      operationId: getSessionSettings
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/SessionSettings'
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
      summary: Get general session management settings.
    put:
      consumes:
        - application/json
      operationId: updateSessionSettings
      parameters:
        - description: Session settings.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SessionSettings'
      produces:
        - application/json
      responses:
        '200':
          description: General session management settings updated.
          schema:
            $ref: '#/definitions/SessionSettings'
        '400':
          description: The request was improperly formatted or contained invalid fields.
        '403':
          description: >-
            PingFederate does not have the appropriate IdP/SP role enabled.
            Operation not available.
        '422':
          description: Validation error(s) occurred.
          schema:
            $ref: '#/definitions/ApiResult'
      summary: Update general session management settings.
schemes:
  - https
swagger: '2.0'

