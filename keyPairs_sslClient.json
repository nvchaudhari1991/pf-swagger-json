{"apiVersion":"v1","swaggerVersion":"1.2","basePath":"https://ip-10-101-29-72:9999/pf-admin-api/v1","resourcePath":"/keyPairs/sslClient","produces":["application/json"],"apis":[{"path":"/keyPairs/sslClient","operations":[{"method":"GET","summary":"Get list of key pairs.","notes":"","type":"KeyPairViews","nickname":"getKeyPairs","parameters":[],"responseMessages":[{"code":200,"message":"Success."}]}]},{"path":"/keyPairs/sslClient/import","operations":[{"method":"POST","summary":"Import a new key pair.","notes":"","type":"KeyPairView","nickname":"importKeyPair","consumes":["application/json"],"parameters":[{"name":"body","description":"File to import.","required":true,"allowMultiple":false,"type":"PKCS12File","paramType":"body"}],"responseMessages":[{"code":201,"message":"Key Pair imported."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":403,"message":"The operation is not permitted, based on the current configuration of the server."},{"code":422,"message":"Validation error(s) occurred."}]}]},{"path":"/keyPairs/sslClient/generate","operations":[{"method":"POST","summary":"Generate a new key pair.","notes":"","type":"KeyPairView","nickname":"createKeyPair","consumes":["application/json"],"parameters":[{"name":"body","description":"Settings for the new key pair.","required":true,"allowMultiple":false,"type":"NewKeyPairSettings","paramType":"body"}],"responseMessages":[{"code":201,"message":"Key Pair created."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":422,"message":"Validation error(s) occurred."}]}]},{"path":"/keyPairs/sslClient/{id}","operations":[{"method":"GET","summary":"Retrieve details of a key pair.","notes":"","type":"KeyPairView","nickname":"getKeyPair","parameters":[{"name":"id","description":"ID of the key pair to retrieve.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":404,"message":"Resource not found."}]},{"method":"DELETE","summary":"Delete a key pair.","notes":"If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error.","type":"ApiResult","nickname":"deleteKeyPair","parameters":[{"name":"id","description":"ID of the key pair to delete.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":204,"message":"Key Pair deleted."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Resource is in use and cannot be deleted."}]}]},{"path":"/keyPairs/sslClient/{id}/csr","operations":[{"method":"GET","summary":"Generate a new certificate signing request (CSR) for this key pair.","notes":"For a successful request, the PEM-encoded CSR file is directly returned as text and the response content type is application/pkcs10. If an error occurs, an ApiResult is returned in JSON format, and the content type is application/json.","type":"string","nickname":"exportCsr","parameters":[{"name":"id","description":"ID of the key pair.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."}]},{"method":"POST","summary":"Import a CSR response for this key pair.","notes":"","type":"KeyPairView","nickname":"importCsrResponse","consumes":["application/json"],"parameters":[{"name":"id","description":"ID of the key pair.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"The CSR response.","required":true,"allowMultiple":false,"type":"CSRResponse","paramType":"body"}],"responseMessages":[{"code":200,"message":"CSR Response imported."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred."}]}]},{"path":"/keyPairs/sslClient/{id}/pkcs12","operations":[{"method":"POST","summary":"Download the key pair in PKCS12 format.","notes":"For a successful request, the PKCS12 file is directly returned in binary format and the response content type is application/x-pkcs12. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json. Due to the sensitivity of the password parameter, the method for this operation is POST rather than GET.","type":"void","nickname":"exportPKCS12File","consumes":["application/json"],"parameters":[{"name":"id","description":"ID of the key pair.","required":true,"allowMultiple":false,"type":"string","paramType":"path"},{"name":"body","description":"Parameters for the export request","required":true,"allowMultiple":false,"type":"PKCS12ExportSettings","paramType":"body"}],"responseMessages":[{"code":200,"message":"Key Pair downloaded."},{"code":400,"message":"The request was improperly formatted or contained invalid fields."},{"code":404,"message":"Resource not found."},{"code":422,"message":"Validation error(s) occurred."}]}]},{"path":"/keyPairs/sslClient/{id}/certificate","operations":[{"method":"GET","summary":"Download the certificate from a given key pair.","notes":"For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json.","type":"string","nickname":"exportCertificateFile","parameters":[{"name":"id","description":"ID of the key pair.","required":true,"allowMultiple":false,"type":"string","paramType":"path"}],"responseMessages":[{"code":200,"message":"Success."},{"code":404,"message":"Resource not found."}]}]}],"models":{"PKCS12File":{"id":"PKCS12File","description":"Represents the contents of a PKCS12 file.","required":["fileData","password","encryptedPassword"],"properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified."},"fileData":{"type":"string","description":"Base64 encoded PKCS12 file data. New line characters should be omitted or encoded in this value."},"password":{"type":"string","description":"Password for the PKCS12 file."},"encryptedPassword":{"type":"string","description":"Encrypted password for the PKCS12 file."},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]}}},"KeyPairViews":{"id":"KeyPairViews","description":"A collection of KeyPairView items.","properties":{"items":{"type":"array","description":"The actual list of KeyPairView instances.","items":{"$ref":"KeyPairView"}}}},"KeyPairView":{"id":"KeyPairView","description":"Key pair details.","properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate."},"serialNumber":{"type":"string","description":"The serial number assigned by the CA."},"subjectDN":{"type":"string","description":"The subject's distinguished name."},"subjectAlternativeNames":{"type":"array","description":"The subject alternative names (SAN).","items":{"type":"string"}},"issuerDN":{"type":"string","description":"The issuer's distinguished name."},"validFrom":{"type":"string","format":"date-time","description":"The start date from which the item is valid, in ISO 8601 format (UTC)."},"expires":{"type":"string","format":"date-time","description":"The end date up until which the item is valid, in ISO 8601 format (UTC)."},"keyAlgorithm":{"type":"string","description":"The public key algorithm."},"keySize":{"type":"integer","format":"int32","description":"The public key size."},"signatureAlgorithm":{"type":"string","description":"The signature algorithm."},"version":{"type":"integer","format":"int32","description":"The X.509 version to which the item conforms."},"sha1Fingerprint":{"type":"string","description":"SHA-1 fingerprint in Hex encoding."},"sha256Fingerprint":{"type":"string","description":"SHA-256 fingerprint in Hex encoding."},"status":{"$ref":"CertificateValidity","description":"Status of the item.","enum":["VALID","EXPIRED","NOT_YET_VALID","REVOKED"]},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]},"rotationSettings":{"$ref":"KeyPairRotationSettings","description":"Key pair rotation settings. Only applicable to self-signed signing key pairs. Automatic key rotation is not currently available for SSL client or SSL server key pairs."}}},"PKCS12ExportSettings":{"id":"PKCS12ExportSettings","description":"Settings for exporting a PKCS12 file from the system.","required":["password"],"properties":{"password":{"type":"string","description":"The password for the PKCS12 file that is created."}}},"ValidationError":{"id":"ValidationError","description":"A data input validation error.","properties":{"errorId":{"type":"string","description":"Error identifier."},"message":{"type":"string","description":"User-friendly error description."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"fieldPath":{"type":"string","description":"The path to the model field to which the error relates, if one exists."}}},"KeyPairRotationSettings":{"id":"KeyPairRotationSettings","description":"Key Pair Rotation Details","required":["creationBufferDays","activationBufferDays"],"properties":{"id":{"type":"string"},"creationBufferDays":{"type":"integer","format":"int32","description":"Buffer days before key pair expiration for creation of a new key pair."},"activationBufferDays":{"type":"integer","format":"int32","description":"Buffer days before key pair expiration for activation of the new key pair."},"validDays":{"type":"integer","format":"int32","description":"Valid days for the new key pair to be created. If this property is unset, the validity days of the original key pair will be used."},"keyAlgorithm":{"type":"string","description":"Key algorithm to be used while creating a new key pair. If this property is unset, the key algorithm of the original key pair will be used. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint."},"keySize":{"type":"integer","format":"int32","description":"Key size, in bits. If this property is unset, the key size of the original key pair will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint."},"signatureAlgorithm":{"type":"string","description":"Required if the original key pair used SHA1 algorithm. If this property is unset, the default signature algorithm of the original key pair will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint."}}},"ApiResult":{"id":"ApiResult","description":"Details on the result of the operation.","properties":{"resultId":{"type":"string","description":"Result identifier."},"message":{"type":"string","description":"Success or error message."},"developerMessage":{"type":"string","description":"Developer-oriented error message, if available."},"validationErrors":{"type":"array","description":"List of validation errors, if any.","items":{"$ref":"ValidationError"}}}},"CSRResponse":{"id":"CSRResponse","description":"Represents a CSR response file.","required":["fileData"],"properties":{"fileData":{"type":"string","description":"The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value."}}},"NewKeyPairSettings":{"id":"NewKeyPairSettings","description":"Settings for creating a new key pair.","required":["commonName","organization","country","validDays","keyAlgorithm"],"properties":{"id":{"type":"string","description":"The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified."},"commonName":{"type":"string","description":"Common name for key pair subject."},"subjectAlternativeNames":{"type":"array","description":"The subject alternative names (SAN).","items":{"type":"string"}},"organization":{"type":"string","description":"Organization."},"organizationUnit":{"type":"string","description":"Organization unit."},"city":{"type":"string","description":"City."},"state":{"type":"string","description":"State."},"country":{"type":"string","description":"Country."},"validDays":{"type":"integer","format":"int32","description":"Number of days the key pair will be valid for."},"keyAlgorithm":{"type":"string","description":"Key generation algorithm. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint."},"keySize":{"type":"integer","format":"int32","description":"Key size, in bits. If this property is unset, the default size for the key algorithm will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint."},"signatureAlgorithm":{"type":"string","description":"Signature algorithm. If this property is unset, the default signature algorithm for the key algorithm will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint."},"cryptoProvider":{"$ref":"CryptoProvider","description":"Cryptographic Provider.  This is only applicable if Hybrid HSM mode is true.","enum":["LOCAL","HSM"]}}}}}